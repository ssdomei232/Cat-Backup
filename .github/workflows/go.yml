name: Build and Upload to WebDAV

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'  # 触发条件：当推送的标签以 'v' 开头时（例如 v1.0.0）

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'  # 指定 Go 版本

      - name: Build
        id: build_step
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          output_name="catbackup-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" == "windows" ]; then
            output_name="$output_name.exe"
          fi
          go build -o $output_name .
          # 确保文件生成成功
          ls -l $output_name

      - name: Upload to WebDAV
        run: |
          # 安装 webdav-client
          npm install -g webdav-cli

          # 上传构建文件到 WebDAV 服务器
          output_name="catbackup-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" == "windows" ]; then
            output_name="$output_name.exe"
          fi

          webdav upload \
            --url ${{ secrets.WEBDAV_URL }} \
            --username ${{ secrets.WEBDAV_USERNAME }} \
            --password ${{ secrets.WEBDAV_PASSWORD }} \
            --remote-path /path/to/upload/$output_name \
            --local-path $output_name