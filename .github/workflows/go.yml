name: Release Cat-Backup

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*' # 当推送 v 开头的标签时自动触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20' # 指定 Go 版本

      - name: Build and package
        run: |
          mkdir -p dist
          for os in linux windows darwin; do
            for arch in amd64 arm64 386; do
              if [[ $os == "windows" && $arch == "arm64" ]]; then continue; fi # Windows不支持ARM64
              GOOS=$os GOARCH=$arch go build -o dist/cat-backup-$os-$arch${os:+.${os}}
              if [[ $os == "windows" ]]; then
                zip -j dist/cat-backup-$os-$arch.zip dist/cat-backup-$os-$arch.exe
              else
                tar -czf dist/cat-backup-$os-$arch.tar.gz -C dist cat-backup-$os-$arch
              fi
              rm -f dist/cat-backup-$os-$arch${os:+.${os}} # 清理未压缩的文件
            done
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cat-backup-binaries
          path: dist/
          retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: cat-backup-binaries
          path: dist/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload all assets
        run: |
          for file in $(find dist -type f); do
            asset_name=$(basename "$file")
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: $(file -b --mime-type "$file")" \
              --data-binary @"$file" \
              "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$asset_name"
          done